import React from 'react';

import css from './Art.css';

var patterns = {
	"0": "XXOOOOXX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXXOOOOXX\nXXXXXXXX\n",
	"1": "XXXXOXXX\nXXXOOXXX\nXXOOOXXX\nXXXOOXXX\nXXXOOXXX\nXXXOOXXX\nXXOOOOXX\nXXXXXXXX\n",
	"2": "XXOOOOXX\nXOOXXOOX\nXOOXXOOX\nXXXXOOXX\nXXXOOXXX\nXXOOXXXX\nXOOOOOOX\nXXXXXXXX\n",
	"3": "XXOOOOXX\nXOOXXOOX\nXXXXXOOX\nXXXOOOXX\nXXXXXOOX\nXOOXXOOX\nXXOOOOXX\nXXXXXXXX\n",
	"4": "XXXXOOXX\nXXXOOOXX\nXXOXOOXX\nXOXXOOXX\nXOOOOOOX\nXXXXOOXX\nXXXOOOOX\nXXXXXXXX\n",
	"5": "XOOOOOOX\nXOOOOOOX\nXOXXXXXX\nXOOOOOXX\nXXXXXOOX\nXOOXXOOX\nXXOOOOXX\nXXXXXXXX\n",
	"6": "XXOOOOXX\nXOOXXOOX\nXOOXXXXX\nXOOOOOXX\nXOOXXOOX\nXOOXXOOX\nXXOOOOXX\nXXXXXXXX\n",
	"7": "XOOOOOOX\nXOXXXOOX\nXXXXXOOX\nXXXXOOXX\nXXXXOOXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\n",
	"8": "XXOOOOXX\nXOOXXOOX\nXOOXXOOX\nXXOOOOXX\nXOOXXOOX\nXOOXXOOX\nXXOOOOXX\nXXXXXXXX\n",
	"9": "XXOOOOXX\nXOOXXOOX\nXOOXXOOX\nXXOOOOOX\nXXXXXOOX\nXOOXXOOX\nXXOOOOXX\nXXXXXXXX\n",
	"-": "XXXXXXXX\n",
	"a": "XXOOOXXX\nXXXOOOXX\nXXOXOOXX\nXXOXXOOX\nXOOOOOOX\nXOXXXOOO\nOOOXOOOO\nXXXXXXXX\n",
	"b": "OOOOOOXX\nXOOXXOOX\nXOOXXOOX\nXOOOOOXX\nXOOXXOOX\nXOOXXOOX\nOOOOOOXX\nXXXXXXXX\n",
	"c": "XXOOOOOX\nXOOXXOOX\nXOOXXXOX\nXOOXXXXX\nXOOXXXOX\nXOOXXXOX\nXXOOOOXX\nXXXXXXXX\n",
	"d": "OOOOOOXX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nOOOOOOXX\nXXXXXXXX\n",
	"e": "OOOOOOOX\nXOOXXOOX\nXOOXXXXX\nXOOOOOXX\nXOOXXXXX\nXOOXXOOX\nOOOOOOOX\nXXXXXXXX\n",
	"f": "OOOOOOOX\nXOOXXXOX\nXOOXOXOX\nXOOOOXXX\nXOOXOXXX\nXOOXXXXX\nOOOOOXXX\nXXXXXXXX\n",
	"g": "XXOOOOOX\nXOOXXOOX\nXOOXXXOX\nXOOXXXXX\nXOOXOOOO\nXOOXXOOX\nXXOOOOXX\nXXXXXXXX\n",
	"h": "OOOOXOOO\nXOOXXOOX\nXOOXXOOX\nXOOOOOOX\nXOOXXOOX\nXOOXXOOX\nOOOXOOOO\nXXXXXXXX\n",
	"i": "XXOOOOXX\nXXXOOXXX\nXXXOOXXX\nXXXOOXXX\nXXXOOXXX\nXXXOOXXX\nXXOOOOXX\nXXXXXXXX\n",
	"j": "XXXOOOOX\nXXXXOOXX\nXXXXOOXX\nXXXXOOXX\nXXXXOOXX\nXOOXOOXX\nXXOOOXXX\nXXXXXXXX\n",
	"k": "OOOOXOOO\nXOOXXOOX\nXOOXOOXX\nXOOOOXXX\nXOOXOOXX\nXOOXXOOX\nOOOOXOOO\nXXXXXXXX\n",
	"l": "XOOOOXXX\nXXOOXXXX\nXXOOXXXX\nXXOOXXXX\nXXOOXXOX\nXXOOXOOX\nXOOOOOOX\nXXXXXXXX\n",
	"m": "OOXXXOOO\nXOOXXOOX\nXOOXOOOX\nXOOOOOOX\nXOXOXOOX\nXOXXXOOX\nOOOXOOOO\nXXXXXXXX\n",
	"n": "OOOXXOOO\nXOOOXXOX\nXOOOXXOX\nXOXOOXOX\nXOXOOXOX\nXOXXOOOX\nOOOXOOOX\nXXXXXXXX\n",
	"o": "XXOOOOXX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXXOOOOXX\nXXXXXXXX\n",
	"p": "XOOOOOXX\nXXOOXOOX\nXXOOXOOX\nXXOOXOOX\nXXOOOOXX\nXXOOXXXX\nXOOOOXXX\nXXXXXXXX\n",
	"q": "XXOOOOXX\nXOOXXOOX\nXOOXXOOX\nXOOXXOOX\nXOOXOOOX\nXOOXXOOX\nXXOOOOXO\nXXXXXXXX\n",
	"r": "OOOOOOXX\nXOOXXOOX\nXOOXXOOX\nXOOOOOXX\nXOOXXOOX\nXOOXXOOX\nOOOOXXOO\nXXXXXXXX\n",
	"s": "XXOOOOOX\nXOOXXOOX\nXOOOXXXX\nXXOOOOXX\nXXXXOOOX\nXOOXXOOX\nXOOOOOXX\nXXXXXXXX\n",
	"t": "OOOOOOOO\nOOXOOXOO\nOXXOOXXO\nXXXOOXXX\nXXXOOXXX\nXXXOOXXX\nXXOOOOXX\nXXXXXXXX\n",
	"u": "OOOOXOOO\nXOOXXXOX\nXOOXXXOX\nXOOXXXOX\nXOOXXXOX\nXOOXXXOX\nXXOOOOXX\nXXXXXXXX\n",
	"v": "OOOOXOOO\nXOOXXXOX\nXOOXXXOX\nXXOOXOXX\nXXOOXOXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\n",
	"w": "OOOXOXOO\nOOXXOXXO\nOOXOOOXO\nOOXOOOXO\nXOOOXOOX\nXOOXXOOX\nXOOXXOOX\nXXXXXXXX\n",
	"x": "OOOOXOOO\nXOOXXXOX\nXXOOXOXX\nXXXOOXXX\nXXOXOOXX\nXOXXXOOX\nOOOXOOOO\nXXXXXXXX\n",
	"y": "OOOOXOOO\nXOOXXXOX\nXXOOXOXX\nXXOOXOXX\nXXXOOXXX\nXXXOOXXX\nXXOOOOXX\nXXXXXXXX\n",
	"z": "XOOOOOOX\nXOXXXOOX\nXXXXOOXX\nXXXOOXXX\nXXOOXXXX\nXOOXXXOX\nXOOOOOOX\nXXXXXXXX\n",
	".": "XXXXXXXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\nXXXXXXXX\n",
	",": "XXXXXXXX\nXXXOOXXX\nXXXOOXXX\nXXXXOXXX\nXXXOXXXX\nXXXXXXXX\n",
	"!": "XXXOOXXX\nXXXOOXXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\n",
	"?": "XXOOOOXX\nXOOXXOOX\nXXXXXOOX\nXXXOOXXX\nXXXXXXXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\n",
	"@": "XOOOOOOX\nOXXXXXXO\nOXXOOOXO\nOXOXXOXO\nOXXOOXOX\nOXXXXXXX\nXOOOOOOX\nXXXXXXXX\n",
	"#": "XOOXXOOX\nXOOXXOOX\nOOOOOOOO\nXOOXXOOX\nOOOOOOOO\nXOOXXOOX\nXOOXXOOX\nXXXXXXXX\n",
	"$": "XXXOOXXX\nXXOOOOOX\nXOOXXXXX\nXXOOOOXX\nXXXXXOOX\nXOOOOOXX\nXXXOOXXX\nXXXXXXXX\n",
	"&": "XXOOOOXX\nXOOXXOOX\nXXOOXOXX\nXXOOOXXO\nOOXXOOXO\nOOXXXOOX\nXOOOOXOO\nXXXXXXXX\n",
	"*": "XXXOOXXX\nXOXOOXOX\nXXOOOOXX\nXOXOOXOX\nXXXOOXXX\nXXXXXXXX\n",
	"+": "XXXOOXXX\nXXXOOXXX\nXOOOOOOX\nXOOOOOOX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\n",
	":": "XXXXXXXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\nXXXXXXXX\n",
	";": "XXXXXXXX\nXXXOOXXX\nXXXOOXXX\nXXXXXXXX\nXXXOOXXX\nXXXOOXXX\nXXXOXXXX\nXXXXXXXX\n",
	"/": "XXXXOOXX\nXXXXOOXX\nXXXOOXXX\nXXXOOXXX\nXXXOOXXX\nXXOOXXXX\nXXOOXXXX\nXXXXXXXX\n"
};

class Art extends React.Component {

  render() {
    var that = this;
    //TODO Add all the patterns


    var art = [];
    var phrase = '-' + this.props.phrase.toLowerCase();
    if (phrase.length > 1) {
      phrase = phrase.replace(/ /gi, '-');
      art = phrase.split('').map(function (v, k) {
			  var pattern = patterns[v] || patterns['-'];

			  // zoom the pattern
			  pattern = Array.from(pattern).map(ch => ch == "\n" ?  ch : ch.repeat(that.props.zoom || 2)).join('');

			  var newPattern = [];
			  pattern.split('\n').forEach(patternLine => {
			  	for (let i=0; i<that.props.zoom; i++) {
			  		newPattern.push(patternLine);
			  	}
			  })
			  pattern = newPattern.join('\n');

			  var result = pattern.replace(/x/gi, that.props.shading).replace(/o/gi, that.props.fill);

			  return result;
      });
    }

    return (
			<textarea value={art.join('')} id="art" hidden={this.props.phrase === ''}
			    className="Art" ref="textarea"
			    style={{fontSize: `${this.props.fontSize}px`, lineHeight: `${this.props.fontSize}px`}}>
			</textarea>
    );
  }
}

export default Art;
